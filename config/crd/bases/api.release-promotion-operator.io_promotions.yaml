---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.11.1
  creationTimestamp: null
  name: promotions.api.release-promotion-operator.io
spec:
  group: api.release-promotion-operator.io
  names:
    kind: Promotion
    listKind: PromotionList
    plural: promotions
    singular: promotion
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Promotion is the Schema for the promotions API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: PromotionSpec defines the desired state of Promotion
            properties:
              from:
                description: FromSpec specifies where to promote from.
                properties:
                  environmentRef:
                    description: EnvironmentReference contains a reference to an Environment
                      resource object.
                    properties:
                      name:
                        description: Name of the referent.
                        type: string
                    required:
                    - name
                    type: object
                required:
                - environmentRef
                type: object
              readinessChecks:
                description: A list of resources to be included in the readiness check.
                properties:
                  localObjectsRef:
                    description: A list of objects (in the same namespace) to be included
                      in the readiness check.
                    items:
                      properties:
                        groupVersionResource:
                          description: GroupVersionResource unambiguously identifies
                            a resource.  It doesn't anonymously include GroupVersion
                            to avoid automatic coercion.  It doesn't use a GroupVersion
                            to avoid custom marshalling
                          properties:
                            group:
                              type: string
                            resource:
                              type: string
                            version:
                              type: string
                          required:
                          - group
                          - resource
                          - version
                          type: object
                        name:
                          type: string
                      required:
                      - groupVersionResource
                      - name
                      type: object
                    type: array
                required:
                - localObjectsRef
                type: object
              strategy:
                description: Strategy specifies how to promote.
                properties:
                  pull-request:
                    type: boolean
                required:
                - pull-request
                type: object
              templateRef:
                description: TemplateRef specifies the reference to the PromotionTemplate.
                properties:
                  name:
                    type: string
                required:
                - name
                type: object
              to:
                description: ToSpec specifies where to promote to.
                properties:
                  environmentRef:
                    description: EnvironmentReference contains a reference to an Environment
                      resource object.
                    properties:
                      name:
                        description: Name of the referent.
                        type: string
                    required:
                    - name
                    type: object
                required:
                - environmentRef
                type: object
            required:
            - from
            - strategy
            - templateRef
            - to
            type: object
          status:
            description: PromotionStatus defines the observed state of Promotion
            properties:
              conditions:
                description: Conditions holds the conditions for the Promotion.
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    \n type FooStatus struct{ // Represents the observations of a
                    foo's current state. // Known .status.conditions.type are: \"Available\",
                    \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge
                    // +listType=map // +listMapKey=type Conditions []metav1.Condition
                    `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\"
                    protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }"
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              dependentObjectsReady:
                description: DependentObjectsReady ...
                type: boolean
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
